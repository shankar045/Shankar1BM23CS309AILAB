print("Shankar s pujar()")
print("1BM23CS309")
def create_board():
    return [["-" for _ in range(3)] for _ in range(3)]

def display_board(board):
    for row in board:
        print(row)

def is_valid_move(board, row, col):
    return 0 <= row < 3 and 0 <= col < 3 and board[row][col] == "-"

def has_won(board, player):
   
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or \
           all(board[j][i] == player for j in range(3)):
            return True
   
    if all(board[i][i] == player for i in range(3)) or \
       all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    return all(cell != "-" for row in board for cell in row)

def tic_tac_toe():
    board = create_board()
    current_player = "X"
    move_count = 0  

    while True:
        display_board(board)
        print(f"Enter position to place {current_player}:")

        try:
            row = int(input())
            col = int(input())
        except ValueError:
            print("Please enter valid integers for row and column.")
            continue

        if is_valid_move(board, row, col):
            board[row][col] = current_player
            move_count += 1  

            if has_won(board, current_player):
                display_board(board)
                print(f"{current_player} wins!")
                print("Game Over")
                print(f"Total moves made (cost): {move_count}")
                break
            elif is_board_full(board):
                display_board(board)
                print("It's a draw!")
                print("Game Over")
                print(f"Total moves made (cost): {move_count}")
                break

           
            current_player = "O" if current_player == "X" else "X"
        else:
            print("Invalid move. Try again.")

if __name__ == "__main__":
    tic_tac_toe()

